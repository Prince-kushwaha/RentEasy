// <auto-generated />
using System;
using Data_Access_Layer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access_Layer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230919052125_seedingcardata")]
    partial class seedingcardata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data_Access_Layer.Entities.Car", b =>
                {
                    b.Property<Guid>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RentalPrice")
                        .HasColumnType("float");

                    b.HasKey("VehicleId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            VehicleId = new Guid("cfbc05be-17c6-4574-939d-6fbb7e634eb0"),
                            Maker = "Tata",
                            Model = "Tiago",
                            RentalPrice = 1000.0
                        },
                        new
                        {
                            VehicleId = new Guid("47260862-087b-472d-a2b2-3ee2c3a0d61d"),
                            Maker = "Tata",
                            Model = "Altrox",
                            RentalPrice = 900.0
                        },
                        new
                        {
                            VehicleId = new Guid("94ffe6c3-25c0-4b1e-b412-17b30bd2e22f"),
                            Maker = "Maruti Suzuki",
                            Model = "Ignis",
                            RentalPrice = 2000.0
                        },
                        new
                        {
                            VehicleId = new Guid("27613834-2f2c-4653-8ae7-0cc10d8c983a"),
                            Maker = "Maruti Suzuki",
                            Model = "Claz",
                            RentalPrice = 1200.0
                        });
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.RentalAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RentalPrice")
                        .HasColumnType("float");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RentalAgreements");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "pawan123@gmail.com",
                            Name = "Pawan",
                            Password = "Pawan123@",
                            PhoneNumber = "123456789",
                            Role = "User"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Suraj123@gmail.com",
                            Name = "Suraj",
                            Password = "Suraj123@",
                            PhoneNumber = "123456789",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Admin1234@gmail.com",
                            Name = "Admin",
                            Password = "Admin111@",
                            PhoneNumber = "12345671111",
                            Role = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
